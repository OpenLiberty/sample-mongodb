# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven on Pull

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "actions"]  #Allows testing Actions changes in a fork
  schedule:
    - cron: "0 12 * * 1-5"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        #Update Readme to match
        image: mongo:7.0.7
        env:
            MONGO_INITDB_ROOT_USERNAME: sampleUser
            MONGO_INITDB_ROOT_PASSWORD: openliberty
        # Set health checks to wait until mongo has started
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Set up JDK 21
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven
    - name: Compile App and Tests
      run: |
           mvn -B compiler:compile
           mvn -B compiler:testCompile
    - name: Create Server and Deploy App
      run: |
           mvn -B liberty:create
           mvn -B liberty:deploy
    - name: Start Server
      run: mvn -B liberty:start
    - name: Run Integration Tests
      run: mvn -B failsafe:integration-test
    - name: Stop Server
      run: mvn -B liberty:stop
    - name: Verify Integration Test Results
      run: mvn -B failsafe:verify
    - name: Archive Liberty logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: liberty-logs
        path: target/liberty/wlp/usr/servers/MongoServer/logs/
        retention-days: 1